- hosts: lxdhost
  collections:
    - ansible.builtin
      
  become: true
  tasks:
    - name: Generate SSH key
      become: false
      local_action:
        module: community.crypto.openssh_keypair
        path: "{{ playbook_dir }}/private/id_hpclab_rsa"


    - name: Check munge.key
      become: false
      local_action:
        module: ansible.builtin.stat
        path: "{{ slurm_munge_key }}"
      register: result

    - name: Create munge.key
      become: false
      local_action:
        module: ansible.builtin.copy
        dest: "{{ slurm_munge_key }}"
        content: "{{ lookup('community.general.random_string', length=1024) }}"
      when: not result.stat.exists



    - include_role:
        name: dacrystal.lxc
      vars:
        task: project
        action: create
        args:
          project: "{{ project }}"
          description: "HPC homelab"
          config:
            features.images: "true"
            features.profiles: "true"
            features.storage.volumes: "true"


    # TODO: create network
    # TODO: create storage pool


    - include_role:
        name: dacrystal.lxc
      vars:
        task: volume
        action: create
        args:
          project: "{{ project }}"
          storage: default
          volume: "{{ home_volume }}"
          description: "Shared Home volume"


    - include_role:
        name: dacrystal.lxc
      vars:
        task: profile
        action: create
        devices_base:
          eth0:
            name: eth0
            network: lxdbr0
            type: nic
          root:
            path: /
            pool: default
            type: disk
        devices_dynamic: |
          {{ home_volume }}:
            path: /home
            pool: default
            source: {{ home_volume }}
            type: disk
        args:
          project: "{{ project }}"
          profile: default
          description: "Default {{ project }}"
          devices: "{{ devices_base |combine(devices_dynamic |from_yaml) }}"


    - include_role:
        name: dacrystal.lxc
      vars:
        task: profile
        action: create
        args:
          project: "{{ project }}"
          profile: cloud-user-data
          description: "Cloud-init customization"
          config:
            user.user-data: |
              #cloud-config
              users:
              - name: hpcadmin
                gecos: HPC Admin
                lock_passwd: true
                ssh-authorized-keys:
                  - {{ lookup('file', 'private/id_hpclab_rsa.pub') }}
                sudo: ['ALL=(ALL) NOPASSWD:ALL']
                groups: sudo
                shell: /bin/bash

              ssh_keys:
                rsa_private: |
                  {{ lookup('file', 'private/id_hpclab_rsa') | indent( width=6, first=false) }}
              rsa_public: {{ lookup('file', 'private/id_hpclab_rsa.pub') }}

              packages:
                - epel-release
                - dnf-plugins-core
                - less

              runcmd:
                - dnf config-manager --set-enabled powertools
                - cp /etc/ssh/ssh_host_rsa_key /home/hpcadmin/.ssh/id_rsa
                - cp /etc/ssh/ssh_host_rsa_key.pub /home/hpcadmin/.ssh/id_rsa.pub
                - chown hpcadmin:hpcadmin /home/hpcadmin/.ssh/id_rsa*


    #######################################################################
    # Base image
    #######################################################################
    - include_role:
        name: dacrystal.lxc
      vars:
        task: instance
        action: launch
        args:
          instance: "{{ lxd_image_base }}"
          project: "{{ project }}"
          image: images:centos/8/cloud
          profiles:
            - default
            - cloud-user-data
          description: "Slurm base image"
          wait_cloud: true

    - include_role:
        name: dacrystal.lxc
      vars:
        task: image
        action: publish
        args:
          instance: "{{ lxd_image_base }}"
          project: "{{ project }}"
          alias: "{{ lxd_image_base }}"
          force: true

    - include_role:
        name: dacrystal.lxc
      vars:
        task: instance
        action: delete
        args:
          instance: "{{ lxd_image_base }}"
          project: "{{ project }}"
          force: true  
    #######################################################################
    # Controller image
    #######################################################################
    - include_role:
        name: dacrystal.lxc
      vars:
        task: instance
        action: launch
        args:
          instance: "{{ lxd_image_controller }}"
          project: "{{ project }}"
          image: "{{ lxd_image_base }}"
          description: "Slurm controller image"
          wait_cloud: true

    - name: Configure controller image 
      block:
        - setup:
        - include_role: 
            name: galaxyproject.slurm
          vars:
            slurm_roles: ['controller', 'dbd']
            slurm_configure_munge: false
        
        - meta: flush_handlers
      delegate_to: "{{ lxd_image_controller }}.lxd"
      become: true

    - include_role:
        name: dacrystal.lxc
      vars:
        task: image
        action: publish
        args:
          instance: "{{ lxd_image_controller }}"
          project: "{{ project }}"
          alias: "{{ lxd_image_controller }}"
          force: true

    - include_role:
        name: dacrystal.lxc
      vars:
        task: instance
        action: delete
        args:
          instance: "{{ lxd_image_controller }}"
          project: "{{ project }}"
          force: true  
    #######################################################################
    # Compute image
    #######################################################################
    - include_role:
        name: dacrystal.lxc
      vars:
        task: instance
        action: launch
        args:
          instance: "{{ lxd_image_compute }}"
          project: "{{ project }}"
          image: "{{ lxd_image_base }}"
          description: "Slurm compute image"
          wait_cloud: true
    
    - name: Configure compute image 
      block:
        - setup:
        - include_role: 
            name: galaxyproject.slurm
          vars:
            slurm_roles: ['exec']
            slurm_configure_munge: false
        - meta: flush_handlers
      delegate_to: "{{ lxd_image_compute }}.lxd"
      become: true
    

    - include_role:
        name: dacrystal.lxc
      vars:
        task: image
        action: publish
        args:
          instance: "{{ lxd_image_compute }}"
          project: "{{ project }}"
          alias: "{{ lxd_image_compute }}"
          force: true

    - include_role:
        name: dacrystal.lxc
      vars:
        task: instance
        action: delete
        args:
          instance: "{{ lxd_image_compute }}"
          project: "{{ project }}"
          force: true